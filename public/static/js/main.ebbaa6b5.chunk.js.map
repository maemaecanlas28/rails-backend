{"version":3,"sources":["Components/Board.js","Components/BoardList.js","Types/CategoryTypes.js","Components/Home.js","Images/RankTogether.png","Components/Header.js","Context/AuthContext.js","Components/NavBar.js","Components/AuthProvider.js","Components/RequireAuth.js","Components/Signup.js","Components/Login.js","Images/CreateBoard.png","Components/Create.js","Images/Ribbon.png","Components/LeaderList.js","Images/TRBanner.png","Images/TCBanner.png","Components/Leaders.js","Components/UserList.js","Components/ProfileBoardList.js","Components/Profile.js","Types/DragTypes.js","Components/OptionsCard.js","Components/Comments.js","Components/OneBoardOptions.js","App.js","index.js"],"names":["Board","board","navigate","useNavigate","formattedDate","Date","end_date","toLocaleDateString","year","month","day","Card","className","onClick","boardID","id","src","options","option_image","wrapped","ui","Content","Header","title","Meta","as","userID","user","username","Description","BoardList","boards","category","page","boardCards","filter","curDate","getTime","endDate","map","idx","CategoryTypes","ESPORTS","GAMES","ANIMALS","MOVIES","SPORTS","RELATIONSHIPS","TECHNOLOGY","BUSINESS","MUSIC","FOOD","OTHER","Home","boardLists","Object","keys","key","sort","a","b","toLowerCase","localeCompare","size","Group","RankTogether","alt","AuthContext","React","createContext","signin","signout","setUser","NavBar","useLocation","useState","activeItem","setActiveItem","auth","useContext","Menu","inverted","Item","name","active","to","position","Icon","AuthProvider","children","useEffect","fetch","then","r","json","data","errors","catch","error","console","log","password","configObj","method","headers","body","JSON","stringify","value","Provider","RequireAuth","Signup","setName","setUsername","email","setEmail","setPassword","birthdate","setBirthdate","passwordConfirmation","setPasswordConfirmation","gender","setGender","setErrors","avatarImage","setAvatarImage","setIsLoading","icon","textAlign","Form","onSubmit","e","preventDefault","formData","FormData","append","ok","err","length","Field","type","placeholder","onChange","target","min","max","FormField","Input","fluid","label","readOnly","Button","htmlFor","animated","visible","hidden","files","Dropdown","selection","text","event","handleSelectedGender","Message","header","content","secondary","style","marginTop","Login","location","setError","from","state","pathname","replace","Create","setTitle","description","setDescription","setOptions","setCategory","minDate","setEndDate","tags","setTags","currentDate","setDate","getDate","slice","getMonth","getFullYear","categoryOptions","CreateBoard","alert","split","tag","trim","option","TextArea","Grid","Row","columns","Column","circular","optionsCopyArray","splice","removeOption","URL","createObjectURL","optionsCopyObj","handleOptionNameChange","multiple","uploadOptions","file","search","handleSelectedCategory","maxDate","LeaderList","group","voters","setVoters","handleClickUsername","Dimmer","Loader","user_id","avatar","Ribbon","Leaders","TRBanner","Divider","section","TCBanner","UserList","users","listOfFollowers","List","Image","ProfileBoardList","tab","setBoards","url","createdBoards","itemsPerRow","Profile","bio","setBio","open","setOpen","params","useParams","parseInt","centered","Modal","closeIcon","trigger","onClose","onOpen","patchReqObj","res","followings","find","item","showFollow","positive","postReqObj","userCopy","parse","push","negative","deleteReqObj","pointing","Segment","followers","showTabContent","DragTypes","OptionsCards","moveCard","userVote","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","current","dragIndex","index","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","isDragging","drag","Ref","innerRef","rankings","indexOf","getRankByUser","Comments","comment","removeComment","handleClickCreator","created_at","weekday","Comment","Avatar","Author","Metadata","Text","message","Actions","OneBoardOptions","setBoard","comments","setComments","setMessage","hasUserVoted","optionA","optionB","score","useCallback","prevOptions","update","$splice","votes","vote","board_id","getUserVote","isUserLoggedOut","newList","listingIndex","i","optionsCards","OptionsCard","commentsList","DndProvider","backend","HTML5Backend","vote_count","boardLength","getGridClass","calculateColumns","voteIDs","dividing","labelPosition","floated","App","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ebbaa6b5.chunk.js","sourcesContent":["import React from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { Card, Header } from \"semantic-ui-react\"\n\nfunction Board({ board }) {\n\n    let navigate = useNavigate()\n\n    function handleClickCreator(userID) {\n        navigate(`/profile/${userID}`)\n    }\n\n    function handleClickBoard(boardID) {\n        navigate(`/board/${boardID}`)\n    }\n\n    const endDate = new Date(board.end_date)\n    const options = { year: 'numeric', month: 'numeric', day: 'numeric' };\n    const formattedDate = endDate.toLocaleDateString('en-US', options)\n\n    return (\n        <Card className=\"card-board-scroll\">\n            <img\n                className=\"card-size-homepage\"\n                onClick={() => handleClickBoard(board.id)}\n                src={`https://storage.googleapis.com/ranktogether-images/${board.options[0].option_image}`}\n                wrapped=\"true\"\n                ui=\"false\" />\n            <Card.Content>\n                <Card.Header>{board.title}</Card.Header>\n                <Card.Meta>\n                    <Header\n                        as=\"h4\"\n                        onClick={() => handleClickCreator(board.user.id)}\n                        className='username'>\n                        Creator: {board.user.username}\n                    </Header>\n                </Card.Meta>\n                <Card.Description>\n                    End Date: {formattedDate}\n                </Card.Description>\n            </Card.Content>\n        </Card>\n    )\n}\n\nexport default Board","import React from \"react\";\nimport Board from \"./Board\";\n\n\nfunction BoardList({ boards, category, page }) {\n\n    const boardCards = boards\n        .filter(board => {\n            return board.category === category\n        })\n        .filter(board => {\n            const curDate = new Date().getTime();\n            const endDate = new Date(board.end_date).getTime();\n            if (page === \"home\") {\n                return endDate >= curDate\n            }\n            return endDate < curDate\n        })\n        // bring back to board.id and remove idx\n        .map((board, idx) => {\n            return (\n                <Board\n                    key={idx}\n                    board={board} />\n            )\n        })\n\n    return (\n        <>\n            {boardCards}\n        </>\n    )\n\n}\n\nexport default BoardList","export const CategoryTypes = {\n\tESPORTS: \"eSports\",\n    GAMES: \"Games\",\n    ANIMALS: \"Animals\",\n    MOVIES: \"Movies\",\n    SPORTS: \"Sports\",\n    RELATIONSHIPS: \"Relationships\",\n    TECHNOLOGY: \"Technology\",\n    BUSINESS: \"Business\",\n    MUSIC: \"Music\",\n    FOOD: \"Food\",\n    OTHER: \"Other\"\n}","import React from \"react\";\nimport BoardList from \"./BoardList\"\nimport { Card, Header } from \"semantic-ui-react\"\nimport { CategoryTypes } from \"../Types/CategoryTypes\";\n\nfunction Home({ boards, page }) {\n\n    const categoryOptions = Object.keys(CategoryTypes).map(key => {\n        return CategoryTypes[key]\n    })\n\n    const boardLists = categoryOptions\n        .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n        .map(category => {\n            return (\n                <div\n                    key={category}>\n                    <div className=\"header-margin\">\n                        <Header size='large'>\n                            {category}\n                        </Header>\n                    </div>\n                    <div className=\"board-margin\">\n                        <Card.Group\n                            className=\"board-scroll\">\n                            <BoardList\n                                category={category}\n                                boards={boards}\n                                page={page} />\n                        </Card.Group>\n                    </div>\n                </div>\n            )\n        })\n\n\n    return (\n        <div className=\"home\">\n            {boardLists}\n        </div>\n    )\n}\n\nexport default Home","export default __webpack_public_path__ + \"static/media/RankTogether.a6288087.png\";","import React from \"react\";\nimport RankTogether from \"../Images/RankTogether.png\"\n\nfunction Header() {\n    return (\n        <div>\n            <img\n                src={RankTogether}\n                alt=\"RankTogether GIF\"\n                id=\"main-header\" />\n        </div>\n    )\n}\n\nexport default Header","import React from \"react\";\n\nexport const AuthContext = React.createContext({ \n    user: null,\n    signin: () => {},\n    signout: () => {},\n    setUser: () => {}\n});","import React, { useState, useContext } from \"react\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { AuthContext } from \"../Context/AuthContext\"\nimport { useLocation } from 'react-router-dom';\nimport { Menu, Icon } from \"semantic-ui-react\"\n\nfunction NavBar() {\n\n    const navigate = useNavigate();\n    let location = useLocation();\n    const [activeItem, setActiveItem] = useState(\"Home\")\n    const auth = useContext(AuthContext);\n\n    return (\n        <Menu className=\"nav\" inverted>\n            <Menu.Item\n                name='home'\n                active={activeItem === 'home'}\n                onClick={() => setActiveItem(\"Home\")}>\n                <Link to=\"/\"> Home </Link>\n            </Menu.Item>\n\n            <Menu.Item\n                name='completed'\n                active={activeItem === 'completed'}\n                onClick={() => setActiveItem(\"Completed\")}>\n                <Link to=\"/completed\"> Completed </Link>\n            </Menu.Item>\n\n            <Menu.Item\n                name='create'\n                active={activeItem === 'create'}\n                onClick={() => setActiveItem(\"Create\")}>\n                <Link to=\"/create\"> Create </Link>\n            </Menu.Item>\n\n            <Menu.Item\n                name='leaders'\n                active={activeItem === 'leaders'}\n                onClick={() => setActiveItem(\"Leaders\")}>\n                <Link to=\"/leaders\"> Leaders </Link>\n            </Menu.Item>\n\n            {auth.user ?\n                (<Menu.Item\n                    name='profile'\n                    active={activeItem === 'profile'}\n                    onClick={() => setActiveItem(\"Profile\")}\n                    position=\"right\">\n                    <Link to={`/profile/${auth.user.id}`}>\n                        <Icon name=\"user circle\" />\n                    </Link>\n                </Menu.Item>) :\n                (<Menu.Item\n                    name='login'\n                    active={activeItem === 'login'}\n                    onClick={() => setActiveItem(\"Login\")}\n                    position=\"right\">\n                    <Link to=\"/login\">\n                        Login\n                    </Link>\n                </Menu.Item>)}\n        </Menu>\n    )\n}\n\nexport default NavBar","import React, { useEffect, useState } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n\nfunction AuthProvider({ children }) {\n    let [user, setUser] = useState(null);\n\n    useEffect(() => {\n        fetch(\"/me\")\n            .then((r) => r.json())\n            .then((data) => {\n                if (!data.errors) {\n                    setUser(data);\n                }\n            })\n            .catch((error) => { console.log(error) })\n    }, [])\n\n    let signin = async (username, password) => {\n\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                \"username\": username,\n                \"password\": password\n            }),\n        }\n        // do fetch to call /login in api\n        return fetch(\"/login\", configObj)\n            .then((r) => r.json())\n            .then((data) => {\n                if (!data.error) {\n                    setUser(data);\n                }\n                return data\n            })\n            .catch((error) => { console.log(error) })\n    };\n\n    let signout = async () => {\n        return fetch(\"/logout\", {\n            method: \"DELETE\",\n        }).then(() => {\n            setUser(null);\n        })\n    };\n\n    let value = { user, signin, signout, setUser };\n\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport default AuthProvider","import React, { useContext } from \"react\";\nimport {useLocation, Navigate} from \"react-router-dom\"\nimport { AuthContext } from \"../Context/AuthContext\";\n\nfunction RequireAuth({ children }) {\n    let auth = useContext(AuthContext);\n    let location = useLocation();\n  \n    if (!auth.user) {\n      // Redirect them to the /login page, but save the current location they were\n      // trying to go to when they were redirected. This allows us to send them\n      // along to that page after they login, which is a nicer user experience\n      // than dropping them off on the home page.\n      return <Navigate to=\"/login\" state={{ from: location }} replace />;\n    }\n  \n    return children;\n  }\n\nexport default RequireAuth","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport { Form, Button, Message, Dropdown, FormField, Icon, Header } from \"semantic-ui-react\"\n\nfunction Signup() {\n    const [name, setName] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [birthdate, setBirthdate] = useState(\"\")\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\")\n    const [gender, setGender] = useState(\"\")\n    const [errors, setErrors] = useState(\"\")\n    const [avatarImage, setAvatarImage] = useState(null)\n    const [isLoading, setIsLoading] = useState(false);\n\n    const navigate = useNavigate();\n\n    const genderOptions = [\n        { key: 'Male', text: 'Male', value: 'Male' },\n        { key: 'Female', text: 'Female', value: 'Female' },\n        { key: 'Nonbinary', text: 'Nonbinary', value: 'Nonbinary' },\n        { key: \"Prefer not to answer\", text: \"Prefer not to answer\", value: \"Prefer noy to answer\" }\n    ]\n\n    function handleSelectedGender(event, data) {\n        setGender(data.value)\n    }\n\n    function fileChange(e) {\n        setAvatarImage(e.target.files[0]);\n    }\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setErrors([]);\n        setIsLoading(true);\n        const formData = new FormData();\n        formData.append(\"avatar\", avatarImage);\n        formData.append(\"name\", name)\n        formData.append(\"username\", username)\n        formData.append(\"email\", email)\n        formData.append(\"password\", password)\n        formData.append(\"password\", passwordConfirmation)\n        formData.append(\"gender\", gender)\n        formData.append(\"date_of_birth\", birthdate)\n        fetch(\"/signup\", {\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n            },\n            body: formData,\n        })\n            .then((r) => {\n                setIsLoading(false);\n                if (r.ok) {\n                    r.json().then(() => navigate(\"/login\"));\n                } else {\n                    r.json().then((err) => setErrors(err.errors));\n                }\n            });\n    }\n    return (\n        <div className=\"login-padding\">\n            <Header\n                as='h2'\n                icon\n                textAlign=\"center\">\n                <Icon name='user' />\n                Create an Account!\n            </Header>\n            <div className=\"login-form\">\n                <Form\n                    onSubmit={handleSubmit}\n                    errors={errors.length == 0 ? \"false\" : \"true\"}>\n                    <Form.Field>\n                        <label>Name</label>\n                        <input\n                            type=\"text\"\n                            name=\"Name\"\n                            placeholder='Name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)} />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Username</label>\n                        <input\n                            type=\"text\"\n                            name=\"Username\"\n                            placeholder='Username'\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)} />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Email</label>\n                        <input\n                            type=\"email\"\n                            name=\"Email\"\n                            placeholder='Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)} />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            name=\"Password\"\n                            placeholder='Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)} />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Re-enter Password</label>\n                        <input\n                            type=\"password\"\n                            name=\"Password\"\n                            placeholder='Re-enter your password'\n                            value={passwordConfirmation}\n                            onChange={(e) => setPasswordConfirmation(e.target.value)} />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Birthdate</label>\n                        <input\n                            type=\"date\"\n                            name=\"Birthdate\"\n                            placeholder='Enter your date of birth'\n                            value={birthdate}\n                            min=\"1922-01-01\"\n                            max=\"2022-12-31\"\n                            onChange={(e) => setBirthdate(e.target.value)} />\n                    </Form.Field>\n                    <FormField>\n                        <label>Upload your avatar!</label>\n                        <Form.Input\n                            fluid\n                            label=\"Avatar Chosen: \"\n                            placeholder=\"Use button below to find your avatar\"\n                            readOnly\n                            value={avatarImage?.name} />\n                        <Button\n                            as=\"label\"\n                            htmlFor=\"file\"\n                            type=\"button\"\n                            animated=\"fade\">\n                            <Button.Content visible>\n                                <Icon name=\"file\" />\n                            </Button.Content>\n                            <Button.Content hidden>Choose an Avatar</Button.Content>\n                        </Button>\n                        <input\n                            type=\"file\"\n                            id=\"file\"\n                            hidden\n                            onChange={fileChange} />\n                    </FormField>\n                    <Dropdown\n                        placeholder='Gender'\n                        fluid selection options={genderOptions}\n                        onChange={(e, data) => handleSelectedGender(e, data)}\n                        value={gender} />\n                    {errors.length !== 0 ? (\n                        <Message\n                            error\n                            header='Action Forbidden'\n                            content={errors} />\n                    ) : null}\n                    <Button secondary style={{ marginTop: \"20px\" }} type='submit'>Submit</Button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup","import React, { useState, useContext } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\"\nimport { AuthContext } from \"../Context/AuthContext\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nfunction Login() {\n\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const navigate = useNavigate();\n  const location = useLocation();\n  const auth = useContext(AuthContext);\n  const [error, setError] = useState(\"\")\n\n  let from = location.state?.from?.pathname || \"/\";\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    auth.signin(username, password)\n      .then((data) => {\n        if (data.error) {\n          setError(data.error)\n        }\n        else {\n          navigate(from, { replace: true });\n        }\n        console.log(data)\n      })\n  }\n\n  function handleSignup() {\n    navigate(\"/signup\")\n  }\n\n  return (\n    <div className=\"login-padding\">\n      <div className=\"login-form\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Field>\n            <label>Username</label>\n            <input\n              type=\"text\"\n              onChange={(e) => setUsername(e.target.value)}\n              placeholder='Username' />\n          </Form.Field>\n          <Form.Field>\n            <label>Password</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder='Password' />\n          </Form.Field>\n          <Button secondary type='submit'> Login </Button>\n          <div>\n            <Button secondary style={{ marginTop: \"10px\" }} onClick={handleSignup}>Sign-up</Button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login","export default __webpack_public_path__ + \"static/media/CreateBoard.905d04b6.png\";","import React, { useState } from \"react\";\nimport { Button, Form, Input, TextArea, FormField, Icon, Grid, Card, Dropdown } from \"semantic-ui-react\"\nimport { useNavigate } from \"react-router-dom\"\nimport CreateBoard from \"../Images/CreateBoard.png\"\nimport { CategoryTypes } from \"../Types/CategoryTypes\";\n\nfunction Create() {\n\n    const [title, setTitle] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [options, setOptions] = useState([])\n    const [category, setCategory] = useState(\"\")\n    const [endDate, setEndDate] = useState(minDate())\n    const [errors, setErrors] = useState(\"\")\n    const [tags, setTags] = useState(\"\")\n    const navigate = useNavigate();\n\n    function fileChange(e) {\n        // setOptions(e.target.files[0]);\n        const optionsCount = options.length + e.target.files.length\n        if (optionsCount > 6) {\n            alert(\"MAX options is 6!\");\n            return null;\n        }\n        const uploadOptions = [...e.target.files].map(file => {\n            return { name: file.name, option_image: file }\n        })\n        setOptions([...options, ...uploadOptions])\n    }\n\n    function handleOptionNameChange(e, idx) {\n        const optionsCopyArray = [...options]\n        const optionsCopyObj = { ...optionsCopyArray[idx] }\n        optionsCopyObj.name = e.target.value\n        optionsCopyArray[idx] = optionsCopyObj\n        setOptions(optionsCopyArray)\n    }\n\n    function removeOption(e, idx) {\n        const optionsCopyArray = [...options]\n        optionsCopyArray.splice(idx, 1)\n        setOptions(optionsCopyArray)\n    }\n\n    function minDate() {\n        const currentDate = new Date();\n        currentDate.setDate(currentDate.getDate() + 1);\n        const day = ('0' + currentDate.getDate()).slice(-2)\n        const month = ('0' + (currentDate.getMonth() + 1)).slice(-2)\n        const year = currentDate.getFullYear()\n        return `${year}-${month}-${day}`\n    }\n\n    function maxDate() {\n        const currentDate = new Date();\n        currentDate.setDate(currentDate.getDate() + 14);\n        const day = ('0' + currentDate.getDate()).slice(-2)\n        const month = ('0' + (currentDate.getMonth() + 1)).slice(-2)\n        const year = currentDate.getFullYear()\n        return `${year}-${month}-${day}`\n    }\n\n    function handleSelectedCategory (event, data) {\n        setCategory(data.value)\n      }\n\n      const categoryOptions = Object.keys(CategoryTypes).map(key => {\n        return { key, value: CategoryTypes[key], text: CategoryTypes[key] }\n      })\n\n    function handleCreateBoard(e) {\n        e.preventDefault();\n        if (options.length < 2) {\n            alert(\"Not enough options, min 2\");\n            return;\n        }\n        setErrors([]);\n        const formData = new FormData();\n        formData.append(\"title\", title);\n        formData.append(\"description\", description)\n        // formData.append(\"options\", options)\n        formData.append(\"category\", category)\n        formData.append(\"end_date\", endDate)\n        const tagsArray = tags.split(\",\").map(tag => {\n            formData.append(\"tags[]\", tag.trim())\n        })\n        options.map((option, idx) => {\n            formData.append(`options[]name`, option.name)\n            formData.append(`options[]option_image`, option.option_image)\n        })\n        fetch(\"/boards\", {\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n            },\n            body: formData,\n        })\n            .then(data => data.json())\n            .then(data => {\n                navigate(`/board/${data.id}`)\n            })\n    }\n\n    return (\n        <div className=\"create-form\">\n            <img\n                src={CreateBoard}\n                alt=\"CreateBoard\"\n                className=\"create-board\" />\n            <Form onSubmit={handleCreateBoard}>\n                <Form.Field>\n                    <label>Title</label>\n                    <Input\n                        type=\"text\"\n                        name=\"title\"\n                        placeholder=\"Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)} />\n                </Form.Field>\n                <Form.Field>\n                    <label>Description</label>\n                    <TextArea\n                        type=\"text\"\n                        name=\"description\"\n                        placeholder=\"Description\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)} />\n                </Form.Field>\n                <div className=\"options-container\">\n                    <Grid>\n                        <Grid.Row\n                            columns={3}>\n                            {options.map((option, idx) => {\n                                return (\n                                    <Grid.Column\n                                        key={idx}>\n                                        <Card>\n                                            <div className=\"card-img-container\">\n                                                <div className=\"option-delete-btn\">\n                                                    <Button\n                                                        circular\n                                                        icon='delete'\n                                                        onClick={(e) => removeOption(e, idx)} />\n                                                </div>\n\n                                                <img\n                                                    className=\"card-img\"\n                                                    src={URL.createObjectURL(option.option_image)} />\n                                            </div>\n                                            <Card.Content>\n                                                <Card.Header>\n                                                    <Input\n                                                        value={option.name}\n                                                        size=\"large\"\n                                                        placeholder='Option Title'\n                                                        onChange={(e) => handleOptionNameChange(e, idx)} />\n                                                </Card.Header>\n                                            </Card.Content>\n                                        </Card>\n                                    </Grid.Column>\n                                )\n                            })}\n                        </Grid.Row>\n                    </Grid>\n                </div>\n                <FormField>\n                    <label>Upload your options (min. 2 options - max. 6 options)</label>\n                    <Button\n                        as=\"label\"\n                        htmlFor=\"file\"\n                        type=\"button\"\n                        animated=\"fade\">\n                        <Button.Content visible>\n                            <Icon name=\"file\" />\n                        </Button.Content>\n                        <Button.Content hidden>Upload Options!</Button.Content>\n                    </Button>\n                    <input\n                        multiple=\"multiple\"\n                        type=\"file\"\n                        id=\"file\"\n                        hidden\n                        onChange={fileChange} />\n                </FormField>\n                <Form.Field>\n                    <label>Category</label>\n                    <Dropdown\n                        placeholder='Select Category'\n                        fluid search selection\n                        onChange={(e, data) => handleSelectedCategory(e, data)}\n                        options={categoryOptions}\n                        value={category}/>\n                </Form.Field>\n                <Form.Field>\n                    <label>Tags</label>\n                    <TextArea\n                        type=\"text\"\n                        name=\"tags\"\n                        placeholder=\"Tags\"\n                        value={tags}\n                        onChange={(e) => setTags(e.target.value)} />\n                </Form.Field>\n                <Form.Field>\n                    <label>End Date</label>\n                    <input\n                        type=\"date\"\n                        name=\"End Date\"\n                        value={endDate}\n                        min={minDate()}\n                        max={maxDate()}\n                        onChange={(e) => setEndDate(e.target.value)} />\n                </Form.Field>\n                <Button\n                    secondary\n                    type=\"submit\">\n                    Create Board!\n                </Button>\n            </Form >\n        </div >\n    )\n}\n\nexport default Create","export default __webpack_public_path__ + \"static/media/Ribbon.7a8f8292.png\";","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Image, Dimmer, Loader, Header } from \"semantic-ui-react\"\nimport Ribbon from \"../Images/Ribbon.png\"\n\nfunction LeaderList ({ group }) {\n\n    const [voters, setVoters] = useState([])\n    const navigate = useNavigate();\n\n    function handleClickUsername(userID) {\n        navigate(`/profile/${userID}`)\n    }\n\n    useEffect(() => {\n        const url = group === \"rankers\" ? \"/votes/toprankers\" : \"/votes/topcreators\"\n        fetch(url)\n            .then(data => data.json())\n            .then(data => {\n                setVoters(data)\n            })\n    }, [])\n\n    return (\n        <>\n            {voters.length === 0 ? (<Dimmer active>\n                <Loader size='massive'>Loading</Loader>\n            </Dimmer>) : (<div>\n                <div className=\"top-rank-image\">\n                    <div\n                        onClick={() => handleClickUsername(voters[0].user_id)}\n                        className=\"ribbon-position\">\n                        <img\n                            className=\"rank-image-size\"\n                            size='medium'\n                            src={`https://storage.googleapis.com/ranktogether-images/${voters[0].avatar}`} />\n                        <img\n                            className=\"ribbon\"\n                            src={Ribbon} />\n\n                        <div\n                            className=\"header-topvoters\">\n                            <Header\n                                textAlign=\"center\"\n                                as='h1'>\n                                #1: {voters[0].username}\n                            </Header>\n                        </div>\n                    </div>\n\n                </div>\n                <div \n                    className=\"rest-rank-image\">\n                    <div\n                        className=\"pointer-cursor\"\n                        onClick={() => handleClickUsername(voters[1].user_id)}>\n                        <img\n                            className=\"rank-image-size\"\n                            src={`https://storage.googleapis.com/ranktogether-images/${voters[1].avatar}`} />\n                        <div\n                            className=\"header-topvoters\">\n                            <Header\n                                textAlign=\"center\"\n                                as='h2'>\n                                #2: {voters[1].username}\n                            </Header>\n                        </div>\n\n                    </div>\n                    <div\n                        className=\"pointer-cursor\"\n                        onClick={() => handleClickUsername(voters[2].user_id)}>\n                        <img\n                            className=\"rank-image-size\"\n                            src={`https://storage.googleapis.com/ranktogether-images/${voters[2].avatar}`} />\n                        <div\n                            className=\"header-topvoters\">\n                            <Header\n                                textAlign=\"center\"\n                                as='h2'>\n                                #3: {voters[2].username}\n                            </Header>\n                        </div>\n                    </div>\n                </div>\n            </div>)}\n        </>\n    )\n}\n\nexport default LeaderList","export default __webpack_public_path__ + \"static/media/TRBanner.4433c072.png\";","export default __webpack_public_path__ + \"static/media/TCBanner.65111173.png\";","import React from \"react\";\nimport { Segment, Divider } from \"semantic-ui-react\"\nimport LeaderList from \"./LeaderList\";\nimport TRBanner from \"../Images/TRBanner.png\"\nimport TCBanner from \"../Images/TCBanner.png\"\n\nfunction Leaders() {\n\n    return (\n            <div>\n                <img\n                    src={TRBanner}\n                    alt=\"TRBanner\"\n                    className=\"border-list\" />\n                <LeaderList group=\"rankers\" />\n                <Divider \n                    inverted\n                    section />\n                <img\n                    src={TCBanner}\n                    alt=\"TCBanner\"\n                    className=\"border-list\" />\n                <LeaderList group=\"creators\" />\n            </div>\n    )\n}\n\nexport default Leaders","import React from \"react\";\nimport { List, Header, Image } from \"semantic-ui-react\"\nimport { useNavigate } from \"react-router-dom\"\n\n\nfunction UserList({ users }) {\n\n    const navigate = useNavigate();\n\n    function handleClickProfile(userID) {\n        navigate(`/profile/${userID}`)\n    }\n\n    const listOfFollowers = users.map(user => {\n        return (\n            <>\n            <List key={user.user_id}>\n                <List.Item>\n                    <Header \n                        className=\"followers-header\"\n                        as='h3'\n                        onClick={() => handleClickProfile(user.user_id)}>\n                        <Image\n                            circular\n                            src={`https://storage.googleapis.com/ranktogether-images/${user.avatar}`} />\n                        {user.username}\n                    </Header>\n                </List.Item>\n            </List>\n            </>\n        )\n    })\n    return (\n        <div className=\"followers-list\">\n            {listOfFollowers}\n        </div>\n    )\n}\n\nexport default UserList","import React, { useEffect, useState } from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport Board from \"./Board\";\n\nfunction ProfileBoardList({ user, tab }) {\n\n    const [boards, setBoards] = useState([])\n\n\n    useEffect(() => {\n        if (user != null) {\n            const url = tab === \"created\" ? `/boards/user/${user.id}` : `/boards/ranked/${user.id}`\n            fetch(url)\n                .then(data => data.json())\n                .then(data => {\n                    setBoards(data)\n                })\n        }\n    }, [user, tab])\n\n    const createdBoards = boards.map(board => {\n        return (\n            <Board\n                key={board.id}\n                board={board} />\n        )\n    })\n\n    return (\n        <div>\n            <Card.Group itemsPerRow={4}>\n                {createdBoards}\n            </Card.Group>\n\n        </div>\n    )\n}\n\nexport default ProfileBoardList","import React, { useContext, useState, useEffect } from \"react\";\nimport { Image, Header, Button, Item, Form, TextArea, Input, Modal, Icon, Menu, Segment } from \"semantic-ui-react\"\nimport { AuthContext } from \"../Context/AuthContext\";\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport UserList from \"./UserList\"\nimport ProfileBoardList from \"./ProfileBoardList\"\n\nfunction Profile() {\n\n    const auth = useContext(AuthContext);\n    const navigate = useNavigate();\n    const [bio, setBio] = useState(\"\");\n    const [user, setUser] = useState({});\n    const [open, setOpen] = useState(false)\n    const [activeItem, setActiveItem] = useState(\"Created\")\n    const params = useParams();\n\n    // grabbing user data for the profile page\n    useEffect(() => {\n        if (auth.user?.id === parseInt(params.id)) {\n            setUser(auth.user)\n        }\n        else {\n            fetch(`/users/${params.id}`)\n                .then(data => data.json())\n                .then(data => {\n                    setUser(data)\n                })\n        }\n    }, [params.id])\n\n    const addBio = (e) => {\n        e.preventDefault()\n        const patchReqObj = {\n            method: \"PATCH\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accepts\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"bio\": bio,\n            })\n        }\n        fetch(`/users/${user.id}`, patchReqObj)\n            .then((res) => res.json())\n            .then((data) => {\n                setUser(data)\n                setOpen(!open)\n                auth.setUser(data)\n            })\n    }\n\n    function handleFollow(e) {\n        e.preventDefault()\n        const postReqObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accepts\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"user_id\": user.id,\n            })\n        }\n        fetch(\"/follow\", postReqObj)\n            .then(data => data.json())\n            .then(data => {\n                const userCopy = JSON.parse(JSON.stringify(auth.user))\n                userCopy.followings.push(data)\n                auth.setUser(userCopy)\n            })\n    }\n\n    function handleUnfollow(e) {\n        e.preventDefault()\n        const deleteReqObj = {\n            method: \"DELETE\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accepts\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"user_id\": user.id,\n            })\n        }\n        fetch(\"/unfollow\", deleteReqObj)\n            .then(() => {\n                const userCopy = JSON.parse(JSON.stringify(auth.user))\n                userCopy.followings = userCopy.followings.filter(data => {\n                    return user.id !== data.user_id\n                })\n                auth.setUser(userCopy)\n            })\n    }\n\n    function handleLogout() {\n        auth.signout().then(() => navigate(\"/\"))\n    }\n\n    function showFollow() {\n        const followings = auth.user?.followings\n        const result = followings?.find(item => item.user_id === user.id)\n        return result == null\n    }\n\n    function showTabContent() {\n        switch (activeItem) {\n            case \"Created\":\n                return (<ProfileBoardList user={user} tab=\"created\" />)\n            case \"Ranked\":\n                return (<ProfileBoardList user={user} tab=\"ranked\" />)\n            case \"Followers\":\n                return (<UserList users={user.followers} />)\n            case \"Following\":\n                return (<UserList users={user.followings} />)\n        }\n    }\n\n    return (\n        <div>\n            {auth.user?.id === user.id ?\n                (<Header\n                    className=\"profile-form\"\n                    as='h2'\n                    icon>\n                    <Icon\n                        name='user circle' />\n                    My Profile\n                </Header>) : null}\n            <div className=\"image-profile\">\n                {auth.user?.id === user.id ?\n                    (<Button\n                        secondary\n                        onClick={handleLogout}\n                        className=\"logout-button\">\n                        Logout\n                    </Button>) : null}\n                <Header\n                    className=\"header-padding\"\n                    as=\"h1\"\n                    textAlign=\"center\">\n                    {user.username}\n                </Header>\n                <Image\n                    className=\"border-image\"\n                    src={`https://storage.googleapis.com/ranktogether-images/${user.avatar}`} size='medium' circular centered />\n                <Item.Description>\n                    <Header\n                        className=\"header-padding\"\n                        as=\"h2\"\n                        textAlign=\"center\">\n                        {user.bio}\n                    </Header>\n                </Item.Description>\n                {auth.user?.id === user.id ?\n                    (<Modal\n                        closeIcon\n                        open={open}\n                        trigger={<Button\n                            secondary\n                            className=\"button-center\">\n                            About Me\n                        </Button>}\n                        onClose={() => setOpen(!open)}\n                        onOpen={() => setOpen(!open)}\n                        centered>\n                        <Header icon=\"pencil alternate\" content='About Me' />\n                        <Form onSubmit={addBio}>\n                            <TextArea\n                                type=\"text\"\n                                name=\"bio\"\n                                placeholder=\"Tell us about yourself\"\n                                value={bio}\n                                onChange={(e) => setBio(e.target.value)} />\n                            <Input type=\"submit\" className=\"button-margin\" />\n                        </Form>\n                    </Modal>) : null}\n                <>{auth.user?.id === user?.id ? null\n                    : (<div>\n                        {showFollow() ?\n                            (<Button\n                                className=\"button-center\"\n                                positive\n                                onClick={handleFollow}>\n                                👉 Follow\n                            </Button>)\n                            :\n                            (<Button\n                                className=\"button-center\"\n                                negative\n                                onClick={handleUnfollow}>\n                                Unfollow\n                            </Button>)}\n                    </div>)} </>\n                <div className=\"profile-navbar\">\n                    <Menu \n                        pointing \n                        secondary>\n                        <Menu.Item\n                            name='Created'\n                            active={activeItem === 'Created'}\n                            onClick={() => setActiveItem(\"Created\")} />\n                        <Menu.Item\n                            name='Ranked'\n                            active={activeItem === 'Ranked'}\n                            onClick={() => setActiveItem(\"Ranked\")} />\n                        <Menu.Item\n                            name='Followers'\n                            active={activeItem === 'Followers'}\n                            onClick={() => setActiveItem(\"Followers\")} />\n                        <Menu.Item\n                            name='Following'\n                            active={activeItem === 'Following'}\n                            onClick={() => setActiveItem(\"Following\")} />\n                    </Menu>\n\n                    <Segment>\n                        {showTabContent()}\n                    </Segment>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile","export const DragTypes = {\n\tCARD: 'card',\n}","import React, { useRef } from \"react\";\nimport { Grid, Card, Ref, Header } from \"semantic-ui-react\"\nimport { DragTypes } from '../Types/DragTypes'\nimport { useDrag, useDrop } from 'react-dnd'\n\nfunction OptionsCards({ option, idx, moveCard, userVote }) {\n\n\tconst ref = useRef(null)\n\tconst [{ handlerId }, drop] = useDrop({\n\t\taccept: DragTypes.CARD,\n\t\tcollect(monitor) {\n\t\t\treturn {\n\t\t\t\thandlerId: monitor.getHandlerId(),\n\t\t\t}\n\t\t},\n\t\thover(item, monitor) {\n\t\t\tif (!ref.current) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst dragIndex = item.index\n\t\t\tconst hoverIndex = idx\n\n\t\t\t// Don't replace items with themselves\n\t\t\tif (dragIndex === hoverIndex) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Determine rectangle on screen\n\t\t\tconst hoverBoundingRect = ref.current?.getBoundingClientRect()\n\n\t\t\t// Get vertical middle\n\t\t\tconst hoverMiddleY =\n\t\t\t\t(hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n\n\t\t\t// Determine mouse position\n\t\t\tconst clientOffset = monitor.getClientOffset()\n\n\t\t\t// Get pixels to the top\n\t\t\tconst hoverClientY = (clientOffset).y - hoverBoundingRect.top\n\n\t\t\t// Only perform the move when the mouse has crossed half of the items height\n\t\t\t// When dragging downwards, only move when the cursor is below 50%\n\t\t\t// When dragging upwards, only move when the cursor is above 50%\n\n\t\t\t// Dragging downwards\n\t\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Dragging upwards\n\t\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Time to actually perform the action\n\t\t\tif (userVote == null) {\n\t\t\t\tmoveCard(dragIndex, hoverIndex)\n\t\t\t}\n\n\t\t\t// Note: we're mutating the monitor item here!\n\t\t\t// Generally it's better to avoid mutations,\n\t\t\t// but it's good here for the sake of performance\n\t\t\t// to avoid expensive index searches.\n\t\t\titem.index = hoverIndex\n\t\t},\n\t})\n\n\tconst [{ isDragging }, drag] = useDrag({\n\t\ttype: DragTypes.CARD,\n\t\titem: () => {\n\t\t\treturn { id: option.id, index: idx }\n\t\t},\n\t\tcollect: (monitor) => ({\n\t\t\tisDragging: monitor.isDragging(),\n\t\t}),\n\t})\n\n\tconst opacity = isDragging ? 0 : 1\n\tdrag(drop(ref))\n\n\tfunction getRankByUser() {\n\t\tif (userVote != null) {\n\t\t\tconst { rankings } = userVote\n\t\t\tconst optionIdx = rankings.indexOf(option.id)\n\t\t\treturn optionIdx + 1\n\t\t}\n\t}\n\n\treturn (\n\t\t<Ref innerRef={ref}>\n\t\t\t<Grid.Column\n\t\t\t\tdata-handler-id={handlerId}>\n\t\t\t\t<Card centered className=\"card-margin\">\n\t\t\t\t\t{userVote != null ?\n\t\t\t\t\t\t(<div className=\"one-option-vote\">\n\t\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t\t\tas='h2'>\n\t\t\t\t\t\t\t\tYour rank: {getRankByUser()}\n\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t</div>) : null}\n\t\t\t\t\t<div className=\"card-img-container\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"card-img\"\n\t\t\t\t\t\t\tsrc={`https://storage.googleapis.com/ranktogether-images/${option.option_image}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t<div className=\"board-option-name\">\n\t\t\t\t\t\t\t\t{option.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"board-option-number\">\n\t\t\t\t\t\t\t\t<h4> {idx + 1} </h4>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t</Card.Content>\n\t\t\t\t</Card>\n\t\t\t</Grid.Column>\n\t\t</Ref>\n\n\t)\n\n}\n\nexport default OptionsCards","import React, { useContext } from \"react\";\nimport { Comment, Header, Form, Button } from \"semantic-ui-react\"\nimport { AuthContext } from \"../Context/AuthContext\";\n\nfunction Comments({ comment, idx, removeComment, handleClickCreator }) {\n\n    const auth = useContext(AuthContext);\n\n    const commentDate = new Date(comment.created_at)\n    const options = { weekday: 'long', year: 'numeric', month: 'numeric', day: 'numeric' };\n    const formattedDate = commentDate.toLocaleDateString('en-US', options)\n\n    return (\n        <Comment>\n            <Comment.Avatar\n                className=\"avatar-border\"\n                src={`https://storage.googleapis.com/ranktogether-images/${comment.avatar}`} />\n            <Comment.Content>\n                <Comment.Author\n                    onClick={() => handleClickCreator(comment.user_id)}\n                    as='a'>\n                    {comment.username}\n                </Comment.Author>\n                <Comment.Metadata>\n                    <div>\n                        {formattedDate}\n                    </div>\n                </Comment.Metadata>\n                <Comment.Text>{comment.message}</Comment.Text>\n                <Comment.Actions>\n                    {auth.user?.id === comment.user_id ?\n                        (<Button\n                            onClick={() => removeComment(comment)}\n                            circular\n                            icon='delete' />) : null}\n                </Comment.Actions>\n            </Comment.Content>\n        </Comment>\n    )\n}\n\nexport default Comments","import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { Header, Grid, Button, Dimmer, Loader, Comment, Form } from \"semantic-ui-react\"\nimport OptionsCards from \"./OptionsCard\";\nimport update from 'immutability-helper'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Comments from \"./Comments\";\n\n\nfunction OneBoardOptions() {\n\n    const auth = useContext(AuthContext);\n    const params = useParams();\n    const boardID = parseInt(params.id)\n    const [board, setBoard] = useState(null)\n    const [options, setOptions] = useState([]);\n    const [comments, setComments] = useState([])\n    const [message, setMessage] = useState(\"\")\n\n    let navigate = useNavigate()\n\n    function handleClickCreator(userID) {\n        navigate(`/profile/${userID}`)\n    }\n\n    useEffect(() => {\n        fetch(`/boards/${boardID}`)\n            .then(data => data.json())\n            .then(data => {\n                setBoard(data)\n                if (hasUserVoted()) {\n                    data.options = data.options.sort((optionA, optionB) => {\n                        return optionB.score - optionA.score\n                    })\n                }\n                setOptions(data.options)\n                setComments(data.comments)\n            })\n    }, [auth.user])\n\n    function calculateColumns() {\n        const boardLength = options.length\n        if (boardLength === 2 || boardLength === 4) {\n            return 2\n        }\n        return 3\n    }\n\n    function getGridClass() {\n        const boardLength = options.length\n        if (boardLength === 2 || boardLength === 4) {\n            return \"grid-margin grid-width-30\"\n        }\n        return \"grid-margin grid-width-50\"\n    }\n\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n        setOptions((prevOptions) =>\n            update(prevOptions, {\n                $splice: [\n                    [dragIndex, 1],\n                    [hoverIndex, 0, prevOptions[dragIndex]],\n                ],\n            }),\n        )\n    }, [])\n\n    const handleVote = (e) => {\n        e.preventDefault()\n        if (isUserLoggedOut()) {\n            navigate(\"/login\")\n        }\n        const voteIDs = options.map(option => option.id)\n        const postReqObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accepts\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"board_id\": board.id,\n                \"rankings\": voteIDs\n            })\n        }\n        fetch(\"/votes\", postReqObj)\n            .then((res) => res.json())\n            .then((data) => {\n                auth.setUser(data.user)\n            })\n    }\n\n    const handleNewComment = (e) => {\n        e.preventDefault()\n        if (isUserLoggedOut()) {\n            navigate(\"/login\")\n        }\n        const postReqObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accepts\": \"application/json\",\n            },\n            body: JSON.stringify({\n                \"message\": message,\n                \"board_id\": board.id\n            })\n        }\n        fetch(\"/comments\", postReqObj)\n            .then((res) => res.json())\n            .then((data) => {\n                setComments([...comments, data])\n                setMessage(\"\")\n            })\n    }\n\n    function hasUserVoted() {\n        const userVote = auth.user?.votes.find(vote => {\n            return board?.id === vote.board_id\n        })\n        return userVote != null;\n    }\n\n    function getUserVote() {\n        const userVote = auth.user?.votes.find(vote => {\n            return board?.id === vote.board_id\n        })\n        return userVote;\n    }\n\n    function isUserLoggedOut() {\n        return auth.user?.id == null\n    }\n\n\n    function removeComment(comment) {\n        const deleteReqObj = {\n            method: \"DELETE\",\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Accepts\": \"application/json\",\n            }\n        }\n        fetch(`/comments/${comment.id}`, deleteReqObj)\n            .then(() => {\n                const newList = [...comments]\n                let listingIndex = 0\n                for (let i = 0; i < newList.length; i++) {\n                    const currListing = newList[i]\n                    if (currListing.id === comment.id) {\n                        listingIndex = i;\n                        break;\n                    }\n                }\n                newList.splice(listingIndex, 1)\n                setComments(newList);\n            })\n    }\n\n    const optionsCards = options\n        .map((option, idx) => {\n            return (\n                <OptionsCards\n                    key={option.id}\n                    option={option}\n                    idx={idx}\n                    moveCard={moveCard}\n                    userVote={getUserVote()} />\n            )\n        })\n\n    const commentsList = comments\n        .map((comment, idx) => {\n            return (\n                <Comments\n                    key={comment.id}\n                    comment={comment}\n                    idx={idx}\n                    removeComment={removeComment}\n                    handleClickCreator={handleClickCreator} />\n            )\n        })\n\n\n    return (\n        <DndProvider backend={HTML5Backend}>\n            <div>\n                {board === null ? (<Dimmer active>\n                    <Loader size='massive'>Loading</Loader>\n                </Dimmer>) :\n                    (<>\n                        <div className=\"header-board\">\n                            <Header as='h1'>\n                                {board.title}\n                            </Header>\n                            <Header as='h2'>\n                                {board.description}\n                            </Header>\n                            <Header\n                                className=\"creator-click\"\n                                onClick={() => handleClickCreator(board.user.id)}\n                                as=\"h3\">\n                                {board.user.username}\n                            </Header>\n                        </div>\n                        <div>\n                            {hasUserVoted() ?\n                                (<Header\n                                    className=\"total-votes\"\n                                    as=\"h2\">\n                                    Total Votes: {board.vote_count}\n                                </Header>) : null}\n                        </div>\n                        <Grid className={getGridClass()} centered={true}>\n                            <Grid.Row columns={calculateColumns()}>\n                                {optionsCards}\n                            </Grid.Row>\n                        </Grid></>)}\n            </div>\n            <div className=\"vote-button\">\n                {!hasUserVoted() ?\n                    (<Button\n                        onClick={handleVote}\n                        size=\"huge\"\n                        secondary>\n                        {isUserLoggedOut() ? \"Login to vote!\" : \"Vote!\"}\n                    </Button>) : null}\n            </div>\n            <div className=\"comments-section\">\n                <Comment.Group>\n                    <Header as='h3' dividing>\n                        Comments!\n                        {commentsList}\n                    </Header>\n                </Comment.Group>\n                <Form>\n                    {isUserLoggedOut() ? null :\n                        (<Form.TextArea\n                            className=\"comment-box\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)} />)}\n                    <Button\n                        onClick={handleNewComment}\n                        // className=\"add-comment-button\"\n                        content={isUserLoggedOut() ? \"Login to comment\" : 'Add Comment'}\n                        labelPosition='left'\n                        icon='edit'\n                        floated=\"right\"\n                        secondary />\n                </Form>\n            </div>\n        </DndProvider>\n    )\n}\n\nexport default OneBoardOptions","import { useState, useEffect } from \"react\"\nimport Home from './Components/Home';\nimport Header from './Components/Header';\nimport NavBar from './Components/NavBar';\nimport AuthProvider from './Components/AuthProvider';\nimport RequireAuth from './Components/RequireAuth';\nimport Signup from './Components/Signup';\nimport Login from \"./Components/Login\"\nimport { Route, Routes } from \"react-router-dom\"\nimport Create from './Components/Create';\nimport Leaders from './Components/Leaders';\nimport Profile from './Components/Profile';\nimport OneBoardOptions from \"./Components/OneBoardOptions\";\n\n\nfunction App() {\n\n  const [boards, setBoards] = useState([])\n\n  useEffect(() => {\n    fetch(\"/boards\")\n      .then(data => data.json())\n      .then(data => {\n        const dataCopy = JSON.stringify(data);\n        // const hack = [...JSON.parse(dataCopy), ...JSON.parse(dataCopy), ...JSON.parse(dataCopy), ...JSON.parse(dataCopy), ...JSON.parse(dataCopy), ...JSON.parse(dataCopy), ...JSON.parse(dataCopy), ...JSON.parse(dataCopy), ...JSON.parse(dataCopy)];\n        // hack[2].category = \"Movies\";\n        // hack[3].category = \"Movies\";\n        // hack[4].category = \"Animals\";\n        // hack[5].category = \"Animals\";\n        setBoards(data)\n      })\n  }, [])\n\n  return (\n    <div className='background-purple'>\n      <Header />\n      <AuthProvider>\n        <NavBar />\n        <div className=\"app-content\">\n          <Routes>\n            <Route path='/' element={<Home boards={boards} page=\"home\" />} />\n            <Route path='/completed' element={<Home boards={boards} page=\"completed\"/>} />\n            <Route path=\"/create\" element={<Create />} />\n            <Route path='/leaders' element={<Leaders />} />\n            <Route path='/profile/:id' element={<Profile />} />\n            <Route path=\"/board/:id\" element={<OneBoardOptions />} />\n            <Route path='/login' element={<Login />} />\n            <Route path=\"/signup\" element={<Signup />} />\n          </Routes>\n        </div>\n      </AuthProvider>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}